/*
   Please use git log for copyright holder and year information

   This file is part of libbash.

   libbash is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 2 of the License, or
   (at your option) any later version.

   libbash is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with libbash.  If not, see <http://www.gnu.org/licenses/>.
*/
gunit bashast;

var_ref:
"$asdf" -> (VAR_REF asdf)
"${asdf}" -> (VAR_REF asdf)
"${asdf:-foo}" -> (VAR_REF (:- asdf (STRING foo)))
"${bar:7}" -> (VAR_REF (OFFSET bar 7))
"${bar: -10}" -> (VAR_REF (OFFSET bar (MINUS_SIGN 10)))
"${bar:(-10 + 5)}" -> (VAR_REF (OFFSET bar (+ (MINUS_SIGN 10) 5)))
"${foo:5:2}" -> (VAR_REF (OFFSET foo 5 2))
"${!asdf*}" -> (VAR_REF (! asdf *))
"${!asdf@}" -> (VAR_REF (! asdf @))
"${!asdf[*]}" -> (VAR_REF (LIST_EXPAND asdf *))
"${!asdf[@]}" -> (VAR_REF (LIST_EXPAND asdf @))
"${#foo}" -> (VAR_REF (# foo))
"${foo#bar}" -> (VAR_REF (# foo (STRING bar)))
"${fo*o#bar}" FAIL
"${fo@o#bar}" FAIL
"${foo##bar}" -> (VAR_REF (## foo (STRING bar)))
"${foo%bar}" -> (VAR_REF (% foo (STRING bar)))
"${foo%%bar}" -> (VAR_REF (%% foo (STRING bar)))
"${this/is/pattern}"->(VAR_REF (REPLACE_FIRST this (STRING is) (STRING pattern)))
//Test positional/special parameters
"$1" -> (VAR_REF 1)
"$@" -> (VAR_REF @)
"$*" -> (VAR_REF *)
"${@}" -> (VAR_REF @)
"${!#}" -> (VAR_REF ! #)
"${3}" -> (VAR_REF 3)
"$?" -> (VAR_REF ?)
"$_" -> (VAR_REF _)
"${_}" -> (VAR_REF _)
"${PV//./_}" -> (VAR_REF (REPLACE_ALL PV (STRING .) (STRING _)))
"${PV/#foo/bar}" -> (VAR_REF (REPLACE_FIRST PV (STRING foo) (STRING bar)))
"${PV/%foo/bar}" -> (VAR_REF (REPLACE_LAST PV (STRING foo) (STRING bar)))

var_def:
"MY_PN=${PN/asterisk-}" -> (= MY_PN (VAR_REF (REPLACE_FIRST PN (STRING asterisk -))))
